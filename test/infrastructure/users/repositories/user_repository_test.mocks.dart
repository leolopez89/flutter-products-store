// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_products_store/test/infrastructure/users/repositories/user_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_products_store/domain/users/datasources/i_user_local_dao.dart'
    as _i3;
import 'package:flutter_products_store/infrastructure/dtos/user_dto.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserDto_0 extends _i1.SmartFake implements _i2.UserDto {
  _FakeUserDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IUserLocalDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUserLocalDao extends _i1.Mock implements _i3.IUserLocalDao {
  MockIUserLocalDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserDto get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _FakeUserDto_0(
          this,
          Invocation.method(
            #get,
            [],
          ),
        ),
      ) as _i2.UserDto);
  @override
  bool isUserLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isUserLoggedIn,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  void logout() => super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<void> save(_i2.UserDto? user) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [user],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
